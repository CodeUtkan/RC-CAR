<xml xmlns="https://developers.google.com/blockly/xml"><block type="pxt-on-start" id="542D]82`[[~,,b^()qkJ" x="0" y="0"><statement name="HANDLER"><block type="typescript_statement" id="Er6E9bv92fda;|A|qyT`" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="namespace RcCar" line1="{" line2="    //% blockId=rcCar" line3="    //% block=&quot;RCar SagMotor=$hiz1, SolMotor=$hiz&quot;" line4="    //% hiz.defl=value hiz.defl=value" line5="    //% hiz.min=0 hiz.max=100" line6="    //% hiz1.min=0 hiz.max=100" line7="    //% color=&quot;#8B0000&quot;" line8="" line9="" line10="radio.onReceivedValue(function (name, value) {" line11="    if (name == &quot;sag&quot;) {" line12="        sagMotor(value)" line13="    } else if (name == &quot;sol&quot;) {" line14="        solMotor(value)" line15="    } else if (name == &quot;dur&quot;) {" line16="        dur()" line17="    }" line18="})" line19="export function sagMotor(hiz1: number): void {" line20="    pins.digitalWritePin(DigitalPin.P8, 0)" line21="    pins.analogWritePin(AnalogPin.P11, Math.abs(hiz1))" line22="    if (hiz1 &gt; 0) {" line23="        pins.digitalWritePin(DigitalPin.P12, 0)" line24="        pins.digitalWritePin(DigitalPin.P2, 1)" line25="    } else {" line26="        pins.digitalWritePin(DigitalPin.P12, 1)" line27="        pins.digitalWritePin(DigitalPin.P2, 0)" line28="    }" line29="}" line30="export function solMotor(hiz: number): void {" line31="    pins.digitalWritePin(DigitalPin.P8, 0)" line32="    pins.analogWritePin(AnalogPin.P15, Math.abs(hiz))" line33="    if (hiz &gt; 0) {" line34="        pins.digitalWritePin(DigitalPin.P13, 0)" line35="        pins.digitalWritePin(DigitalPin.P14, 1)" line36="    } else {" line37="        pins.digitalWritePin(DigitalPin.P13, 1)" line38="        pins.digitalWritePin(DigitalPin.P14, 0)" line39="    }" line40="}" line41="export function dur(): void {" line42="    pins.digitalWritePin(DigitalPin.P12, 0)" line43="    pins.digitalWritePin(DigitalPin.P2, 0)" line44="    pins.digitalWritePin(DigitalPin.P13, 0)" line45="    pins.digitalWritePin(DigitalPin.P14, 0)" line46="    pins.digitalWritePin(DigitalPin.P8, 1)" line47="}" line48="radio.setGroup(5)" line49="led.enable(false)" line50="}" numlines="51"></mutation></block></statement></block></xml>